/*

自己会动的部分，交给定时器去刷新
使用一个容器包含界面中，所有的自动更新的部分，遍历并且刷新
至于ID的问题，可以使用一个数组，对象挂了以后，置位。
产生新对象的时候，遍历寻找最小的值
容器大小就是可以出现的对象的最大值
如果离开了屏幕要如何处理，也许会帮你处理，如果不行，那么对象的绘制就需要留意
看起来是越界了也没有关系，只要判定点出了屏幕，把它删掉就可以了

例如飞机爆炸如何处理

判断以后把飞机的状态设置为爆炸，然后绘制爆炸状态的形式就可以了

TODO:
从新开始的功能
=>通过读取键盘的输入，从而对游戏进行控制
      需要两个函数，一个负责新开游戏，一个负责当前游戏重开
	  两个函数都需要从构造函数中抽取一部分，同时对于重开游戏，只需要把所有变量的值重置，保留雷的信息即可
	  同时由于游戏运行时间变长，需要考虑资源的释放问题

扫雷秘籍
=>比如输入lizecismydaddy，然后鼠标点击一个位置，可以显示指定位置的周围雷的分布
      至少对于高级模式来说，实在是太难了
	  考虑使用deque，在不断输入的字符中，一旦连续输入了指定序列，即可获得
	  至于输出，这个也可以作为一个函数，最后的显示叠加在外面就可以了



done:
现在需要优化代码，代码中有大量重复的片段，需要修改
至于显示的问题，看起来是不能一点都不耦合的，所以还是在draw里面判读怎么显示吧
但是按照MVC设计模式，draw应该只负责draw，而不应该考虑数据，所以这里的问题是数据的结构不行
最终方法：draw不判定，只负责绘制指定的图形



*/